DEPTH = 16384;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : 0001a283;   % 11:     lw t0, 0(gp)                 # t0 = 0x12345678 (teste LW) %
00000001 : 00100293;   % 14:     addi t0, zero, 1             # t0 = 1 (teste ADDI) %
00000002 : 00500313;   % 17:     addi t1, zero, 5              %
00000003 : 006282b3;   % 18:     add t0, t0, t1               # t0 = 6 (teste ADD) %
00000004 : 406282b3;   % 19:     sub t0, t0, t1               # t0 = 1 (teste SUB) %
00000005 : 0f000293;   % 22:     addi t0, zero, 0xF0           %
00000006 : 00f00313;   % 23:     addi t1, zero, 0x0F           %
00000007 : 0062f2b3;   % 24:     and t0, t0, t1               # t0 = 0x00 (teste AND) %
00000008 : 0062e2b3;   % 25:     or t0, t0, t1                # t0 = 0x0F (teste OR) %
00000009 : 00500293;   % 28:     addi t0, zero, 5              %
0000000a : 00a00313;   % 29:     addi t1, zero, 10             %
0000000b : 0062a2b3;   % 30:     slt t0, t0, t1               # t0 = 1 (teste SLT) %
0000000c : 05500293;   % 33:     addi t0, zero, 0x55           %
0000000d : 0051a223;   % 34:     sw t0, 4(gp)                 # MEM[gp+4] = 0x55 (teste SW) %
0000000e : 0041a283;   % 35:     lw t0, 4(gp)                 # t0 = 0x55 (verifica SW) %
0000000f : 00a00293;   % 38:     addi t0, zero, 10             %
00000010 : 00a00313;   % 39:     addi t1, zero, 10             %
00000011 : 00628463;   % 40:     beq t0, t1, branch_ok        # Se t0 == t1, salta (teste BEQ) %
00000012 : 06600293;   % 41:     addi t0, zero, 0x66         # Não deve executar %
00000013 : 00100293;   % 43:     addi t0, zero, 1             # t0 = 1 (confirma branch) %
00000014 : 0080036f;   % 46:     jal t1, jal_test             # Salta e guarda endereço (teste JAL) %
00000015 : 06600293;   % 47:     addi t0, zero, 0x66         # Não deve executar %
00000016 : 00200293;   % 49:     addi t0, zero, 2             # t0 = 2 (confirma JAL) %
00000017 : 01430313;   % 52:     addi t1, t1, 0x14            %
00000018 : 000300e7;   % 53:     jalr ra, t1, 0               # Salta para jair_target (teste JALR) %
00000019 : 06600293;   % 54:     addi t0, zero, 0x66         # Não deve executar %
0000001a : 00300293;   % 56:     addi t0, zero, 3             # t0 = 3 (confirma JALR) %
0000001b : 0ff00293;   % 59:     addi t0, zero, 0xFF          # t0 = 0xFF (marcador de sucesso) %
0000001c : 00100073;   % 60:     ebreak                       # Termina execução %
END;
